<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Tabla de Asesores</title>
  <style>
    /* Estilo general del cuerpo */
    body {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background: linear-gradient(90deg, #4b395f, #070a0f);
      color: #fcfbfb;
      line-height: 1.6;
      overflow: hidden;
      height: 100vh;
    }

    /* Banner superior */
    .banner {
      text-align: center;
      padding: 20px 0;
      background: linear-gradient(135deg, #ff7e5f, #feb47b);
      color: #3914e0;
      font-size: 2rem;
      font-weight: bold;
      letter-spacing: 2px;
      text-transform: uppercase;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      width: 100%;
      position: fixed;
      top: 0;
      left: 0;
      z-index: 1;
      /* Asegurar que el banner esté por debajo del encabezado de la tabla */
    }

    /* Contenedor principal */
    .container {
      width: 90%;
      max-width: 1400px;
      margin: 120px auto 50px;
      padding: 20px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 10px;
      box-shadow: 0 4px 10px rgb(233, 230, 230);
      overflow-x: auto;
      overflow-y: auto;
      max-height: calc(100vh - 180px);
      box-sizing: border-box;

    }

    /* Estilo general de la tabla */
    table {
      width: 100%;
      color: #070a0f;
      font-weight: bold;
      border-collapse: separate;
      margin-top: 1px;
      font-size: 14px;
      background: #969090;
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    /* Encabezado de la tabla */
    thead {
      position: sticky;
      top: 0;
      /* Fijar el encabezado en la parte superior del contenedor */
      z-index: 2;
      /* Asegurar que esté por encima del banner */
      background: linear-gradient(135deg, #ff7e5f, #014d14);
      border-bottom: 5px solid #ff5f02;
      /* Línea divisoria */
    }

    /* Encabezado de la tabla */
    th {
      background: linear-gradient(180deg, #ff7e5f, #1202ff);
      color: #070707;
      padding: 12px;
      text-align: center;
      font-weight: bold;
      font-size: 16px;
    }

    /* Filas de la tabla */
    td {
      padding: 10px;
      text-align: center;
      border: 1px solid #000000;
    }

    /* Alternar colores de fila */
    tr:nth-child(even) {
      background-color: #ff95956b;
    }

    tr:nth-child(odd) {
      background-color: #fff;
    }

    /* Alineación específica para columnas de texto */
    td.texto {
      text-align: left;
    }

    /* Alineación específica para columnas numéricas */
    td.numero {
      text-align: right;
    }
  </style>
</head>

<body>
  <!-- Banner superior -->
  <div class="banner">Campaña - Salta</div>

  <!-- Contenedor principal -->
  <div class="container">
    <!-- Título de la tabla (comentado temporalmente) -->
    <!-- <h1>Tabla de Asesores</h1> -->

    <table id="data-table">
      <thead>
        <tr>
          <th>Apellido y Nombre Supervisor</th>
          <th>Apellido y Nombre Asesor</th>
          <th>DNI Asesor</th>
          <th>Campaña_N</th>
          <th>Prom Tiempo 1ra respuesta</th>
          <th>Rango TPR WP (%) Objetivo 85 % en 2 min</th>
          <th>Puntualidad Whatsapp (%) Objetivo 80 % en 60 min</th>
          <th>Duracion Casos</th>
          <th>Casos</th>
          <th>Casos transferencia</th>
          <th>% Transferencia</th>
          <th>Prom TMO Digital</th>
          <th>Prom ASA</th>
          <th>Q Casos SPC</th>
          <th>%SPC 1D</th>
          <th>Suma de Reitero 1D</th>
          <th>%SPC 2D</th>
          <th>Suma de Reitero 2D</th>
          <th>Detractor</th>
          <th>Neutro</th>
          <th>Promotor</th>
          <th>Total Medallia</th>
          <th>Prom NPS</th>
          <th>RES</th>
          <th>SAT ASI</th>
          <th>Llamadas</th>
          <th>Llam 30m</th>
          <th>Llam 1d</th>
          <th>Llam 2d</th>
          <th>SPL_30</th>
          <th>SPL_1D</th>
          <th>SPL_2D</th>
          <th>Detractor Llamadas</th>
          <th>Neutro Llamadas</th>
          <th>Promotor Llamadas</th>
          <th>Total Medallia Llamadas</th>
          <th>Prom NPS Llamadas</th>
          <th>RES Llamadas</th>
          <th>SAT ASI Llamadas</th>
          <th>TMO</th>
          <th>Punt WT</th>
          <th>BackLog</th>
        </tr>
      </thead>
      <tbody>
        <!-- Los datos se insertarán aquí dinámicamente -->
      </tbody>
    </table>
  </div>

  <script>
    // JSON incrustado directamente en el archivo
    const datos = [




      // Los datos se pegan en JSON hasta acá
    ];

    // Lista de columnas que deben formatearse como porcentaje
    const columnasPorcentaje = [
      "Rango TPR WP (%) Objetivo 85 % en 2 min",
      "Puntualidad Whatsapp (%) Objetivo 80 % en 60 min",
      "% Transferencia",
      "%SPC 1D",
      "%SPC 2D",
      "Prom NPS",
      "RES",
      "SPL_30",
      "SPL_1D",
      "SPL_2D",
      "Prom NPS Llamadas",
      "RES Llamadas",
      "Punt WT",
      "BackLog",
    ];

    // Función para formatear valores como porcentaje
    function formatearPorcentaje(valor) {
      if (valor === "") return ""; // Si el valor está vacío, retorna vacío
      const numero = parseFloat(valor.replace(",", ".")); // Convertir a número
      if (isNaN(numero)) return ""; // Si no es un número válido, retorna vacío
      return `${(numero * 100).toFixed(2)}%`; // Formatear como porcentaje con 2 decimales
    }

    // Función para formatear tiempo (extraer HH:mm:ss)
    function formatearTiempo(valor) {
      if (!valor || valor.trim() === "") return ""; // Si el valor está vacío, retorna vacío
      const partes = valor.split(" "); // Dividir en fecha y hora
      if (partes.length < 2) return valor; // Si no hay hora, retornar el valor original
      return partes[1]; // Retornar solo la parte de tiempo (HH:mm:ss)
    }

    // Función para formatear SAT ASI (un solo decimal)
    function formatearSATASI(valor) {
      if (valor === "") return ""; // Si el valor está vacío, retorna vacío
      const numero = parseFloat(valor.replace(",", ".")); // Convertir a número
      if (isNaN(numero)) return ""; // Si no es un número válido, retorna vacío
      return numero.toFixed(1); // Formatear con un solo decimal
    }

    // Función para formatear TMO (redondear hacia arriba y mostrar como entero)
    function formatearTMO(valor) {
      if (valor === "") return ""; // Si el valor está vacío, retorna vacío
      const numero = parseFloat(valor.replace(",", ".")); // Convertir a número
      if (isNaN(numero)) return ""; // Si no es un número válido, retorna vacío
      return Math.ceil(numero).toString(); // Redondear hacia arriba y convertir a entero
    }

    // Generar la tabla dinámicamente
    const tableBody = document.querySelector("#data-table tbody");
    datos.forEach((item) => {
      const row = document.createElement("tr");
      // Recorrer todas las columnas y aplicar el formato correspondiente
      Object.keys(item).forEach((columna) => {
        const celda = document.createElement("td");
        // Aplicar clases para alineación
        if (
          columna === "Apellido y Nombre Supervisor" ||
          columna === "Apellido y Nombre Asesor" ||
          columna === "DNI Asesor" ||
          columna === "Campaña_N"
        ) {
          celda.classList.add("texto"); // Clase para alinear a la izquierda
        } else {
          celda.classList.add("numero"); // Clase para alinear a la derecha
        }
        // Verificar si la columna debe formatearse como porcentaje
        if (columnasPorcentaje.includes(columna)) {
          celda.textContent = formatearPorcentaje(item[columna]);
        }
        // Verificar si la columna debe formatearse como tiempo
        else if (
          columna === "Prom Tiempo 1ra respuesta" ||
          columna === "Duracion Casos" ||
          columna === "Prom TMO Digital" ||
          columna === "Prom ASA"
        ) {
          celda.textContent = formatearTiempo(item[columna]);
        }
        // Formatear SAT ASI
        else if (columna === "SAT ASI" || columna === "SAT ASI Llamadas") {
          celda.textContent = formatearSATASI(item[columna]);
        }
        // Formatear TMO
        else if (columna === "TMO") {
          celda.textContent = formatearTMO(item[columna]);
        }
        // Mostrar el valor tal cual
        else {
          celda.textContent = item[columna];
        }
        row.appendChild(celda);
      });
      tableBody.appendChild(row);
    });
  </script>
</body>

</html>